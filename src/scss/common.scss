@use 'sass:color';
@use 'sass:map';
@import 'mixins';

$common_gap: 1rem;
$common_margin: $common_gap 0;
$common_table_border: #dee2e6;

.common {
    @include font;
    @include root;
    @include zero;

    background: #fff;
    color: #000;

    :any-link {
        @include link;

        @media print {
            color: #000;
            font-weight: map.get($font_weights, body);
            text-decoration-color: $color_gray_light;
        }
    }

    :is(a[aria-current='true'], [aria-current='true'] > a) {
        font-weight: map.get($font_weights, black);
    }

    :is(b, strong) {
        @include font(bold);
    }

    :is(code, kbd, samp, pre) {
        @include font(mono);
    }

    :is(h1, h2, h3, h4, h5, h6, nav, p, ul) {
        @include zero($margin: $common_margin);
    }

    :is(h1, h2, h3, h4, h5, h6) {
        @include font(h1);
    }

    h2 {
        font-size: map.get($font_sizes, h2);
    }

    h3 {
        font-size: map.get($font_sizes, h3);
    }

    h4 {
        font-size: map.get($font_sizes, h4);
    }

    h5 {
        font-size: map.get($font_sizes, h5);
    }

    h6 {
        font-size: map.get($font_sizes, h6);
    }

    :is(input, select, textarea) {
        @include form_input;
    }

    :is(input[type='checkbox'], input[type='radio']) {
        @include form_input_check;
    }

    input[type='color'] {
        @include form_input_color;
    }

    input[type='range'] {
        @include form_input_range;
    }

    select {
        @include form_select;
    }

    table {
        border-collapse: collapse;
        border-color: currentcolor;
        text-indent: 0;
    }

    ul {
        @include list_unordered;
    }

    :global .bgsu_common {
        &_alert {
            @include box($border: true);

            margin: $common_gap 0;

            &__failure {
                background: color.scale($color_rose, $lightness: 80%);
                border: 1px solid $color_rose;
            }

            &__warning {
                background: color.scale($color_gold, $lightness: 80%);
                border: 1px solid $color_gold;
            }

            &__success {
                background: color.scale($color_seafoam, $lightness: 80%);
                border: 1px solid $color_seafoam;
            }
        }

        &_button {
            @include button;

            &__arrow {
                @include button_set_arrow;
            }

            &__small {
                @include button_set_size(small);

                &.bgsu_common_button__arrow {
                    @include button_set_arrow(small);
                }
            }

            &__primary {
                @include button_set_color(brown);
            }

            &__failure {
                @include button_set_color(rose);
            }

            &__warning {
                @include button_set_color(gold);
            }

            &__success {
                @include button_set_color(seafoam);
            }
        }

        &_form {
            @include zero;

            &_group {
                @include zero($margin: $common_margin);

                & > * {
                    @include zero(flex);

                    align-items: center;
                    gap: 0 $form_padding_x;
                    position: relative;
                }

                :is(input, output, select, textarea) {
                    width: 100%;
                }

                :is(input[type='checkbox'], input[type='radio']) {
                    @include form_input_check;
                }
            }

            &_table {
                @include zero($display: table, $margin: $common_margin);

                & > * {
                    @include zero(table-row);

                    & > * {
                        @include zero(table-cell);

                        vertical-align: middle;

                        & + * {
                            padding-left: $common_gap;
                        }
                    }

                    & + * > * {
                        padding-top: calc($common_gap / 2);
                    }
                }
            }
        }

        &_icon {
            position: relative;

            &__close, &__remove {
                @include close;
            }

            &__remove {
                @include close_set_color(red);
            }

            &__right {
                position: absolute;
                right: $form_padding_x;
            }
        }

        &_list {
            &_breadcrumb, &_comma, &_inline {
                @include zero;

                & > li {
                    @include zero(inline);

                    &::before {
                        all: revert;
                    }
                }
            }

            &_breadcrumb {
                @include font(bold);

                color: $color_gray;
                font-size: 0.7rem;
                line-height: 1;
                list-style: none;
                margin: -0.7rem 0 $common_gap;

                & > li + li::before {
                    content: ' / ';
                }
            }

            &_comma {
                & > li {
                    &::after {
                        content: ', ';
                    }

                    &:last-child::after {
                        display: none;
                    }
                }
            }
        }

        &_records {
            @include zero($margin: $common_margin);

            &_item {
                @include zero($margin: $common_margin);

                color: inherit;
                font-weight: inherit;
                text-decoration: none;

                &_image {
                    background-repeat: no-repeat;
                    background-size: contain;
                    margin: 1rem 0;
                    padding-top: 8rem;

                    img {
                        object-fit: contain;
                        width: 100%;
                        height: 100%;
                    }
                }

                &_title {
                    @include link_underline;

                    color: $link_color;
                    margin-top: 0;
                }

                &:is(:active, :focus, :hover) {
                    color: inherit;

                    .bgsu_common_records_item_title {
                        color: $link_color_active;
                        text-decoration-thickness: 2px;
                    }
                }

                @include container_breakpoint_large {
                    display: flex;

                    &_image {
                        background-position: top right;
                        flex: 0 0 25%;
                        margin: 0 0 0 $common_gap;
                        padding-top: calc(25% * (3 / 4));
                        text-align: right;
                    }
                }

                @include container_breakpoint_huge {
                    &_image {
                        flex: 0 0 20%;
                        padding-top: calc(20% * (3 / 4));
                    }
                }
            }
        }

        &_pagination {
            align-items: center;
            font-variant-numeric: tabular-nums;

            &_buttons {
                @include zero(flex);

                width: 26rem;

                & > * {
                    flex: 1 1 0;
                }
            }

            &_current {
                @include zero;

                flex: 1 1 auto;
            }

            @include container_breakpoint_huge {
                display: flex;
                text-align: right;

                & > * {
                    padding-right: $common_gap;

                    &:last-child {
                        padding-right: 0;
                    }
                }
            }
        }

        &_sidebar {
            @include zero;

            & > * {
                page-break-inside: avoid;
                padding-top: 1px;
            }

            &_title {
                @include zero;
            }

            @media screen {
                @include zero($display: flex, $margin: $common_margin);

                flex-direction: column;

                & > * {
                    padding: 0;
                }

                &_left, &_right {
                    @include box;
                }
            }

            @include container_breakpoint_large {
                flex-direction: row;

                & > * {
                    flex: 1 0 0%;
                    order: 1;
                }

                &_left, &_right {
                    flex: 0 0 25%;
                }

                &_left {
                    margin-right: $common_gap;
                    order: 0;
                }

                &_right {
                    margin-left: $common_gap;
                    order: 2;
                }

                .bgsu_common_sidebar .bgsu_common_sidebar_left,
                .bgsu_common_sidebar .bgsu_common_sidebar_right,
                .bgsu_common_records_item_image {
                    flex: 0 0 calc((100% + $common_gap) / 3);
                }

                .bgsu_common_records_item_image {
                    padding-top: calc(((100% + $common_gap) / 3) * (3 / 4));
                }
            }

            @include container_breakpoint_huge {
                &_left, &_right {
                    flex: 0 0 20%;
                }

                .bgsu_common_sidebar .bgsu_common_sidebar_left,
                .bgsu_common_sidebar .bgsu_common_sidebar_right,
                .bgsu_common_records_item_image {
                    flex: 0 0 calc((100% + $common_gap) / 4);
                }

                .bgsu_common_records_item_image {
                    padding-top: calc(((100% + $common_gap) / 4) * (3 / 4));
                }
            }
        }

        &_table {
            @include font(table);

            font-variant-numeric: tabular-nums;
            margin: $common_margin;
            padding: 0;
            vertical-align: top;

            & > tbody {
                border-top: 2px solid;
                vertical-align: inherit;
            }

            & > tfoot {
                border-top: 2px solid;
                border-bottom: 2px solid;
            }

            & > thead {
                vertical-align: bottom;
            }

            & > :is(tbody, tfoot, thead) > tr > :is(td, th) {
                border: 0 solid $common_table_border;
                border-bottom-width: 1px;
                padding: calc($common_gap / 2);

                &.bgsu_common__join {
                    padding-right: 0;

                    & + :is(td, th) {
                        padding-left: 0;
                    }
                }
            }

            & > thead > tr:first-of-type > :is(td, th) {
                padding-top: 0;
            }

            &__separate {
                border-collapse: separate;
                border-spacing: calc($common_gap / 2) 0;
                margin: $common_gap calc(-1 * ($common_gap / 2));
                white-space: nowrap;

                & > thead > tr > :is(td, th) {
                    border-bottom: 2px solid;
                }
            }

            &__small > :is(tbody, tfoot, thead) > tr > :is(td, th) {
                padding: calc($common_gap / 4);
            }
        }

        &__arrow_first::before {
            content: $scut-laquo + $scut-nbsp;
        }

        &__arrow_previous::before {
            content: $scut-lsaquo + $scut-nbsp;
        }

        &__arrow_next::after {
            content: $scut-nbsp + $scut-rsaquo;
        }

        &__arrow_last::after {
            content: $scut-nbsp + $scut-raquo;
        }

        &__bold {
            @include font(bold);
        }

        &__center {
            text-align: center;
        }

        &__closer {
            margin-top: calc(-1 * $common_gap);
        }

        &__figure {
            font-variant-numeric: tabular-nums;
            text-align: right;
        }

        &__flex {
            display: flex;

            & > * {
                flex: 1 1 0;
            }
        }

        &__full {
            min-width: 100%;
        }

        &__left {
            float: left;
            margin-right: $common_gap;
        }

        &__lead {
            @include font(lead);
        }

        &__narrow {
            @include zero(inline-block);
        }

        &__nowrap {
            white-space: nowrap;
        }

        &__print {
            @media screen {
                display: none;
            }

            &_avoid {
                page-break-inside: avoid;
            }

            &_break {
                page-break-before: always;
            }
        }

        &__right {
            float: right;
            margin-left: $common_gap;
        }

        &__rotate {
            transform: rotate(180deg);
            white-space: nowrap;
            writing-mode: vertical-rl;
        }

        &__screen {
            @media print {
                display: none;
            }
        }

        &__small {
            @include font(small);
        }

        &__title {
            @include font(title);
        }
    }
}
